{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const form = document.querySelector('.feedback-form');\nlet formData = {\n  // email: '',\n  // message: '',\n};\n\nconst fillFormFields = () => { \n  const formDataFromLS = JSON.parse(localStorage.getItem(`feedback-form-state`));//зчитуємо дані з localStorage під ключем feedback-form-state\n  // console.log(formDataFromLS);\n\n  if (fillFormFields === null) {\n    return;\n  }// перевірка, якщо немає данніх в localStorage\n\n  formData = formDataFromLS;// запишимо дані до formData для того щоб не губились дані при перезавантаженні сторінки\n\n  for (const key in formDataFromLS) {\n    if (formDataFromLS.hasOwnProperty(key)) {\n      // console.log('key', key);\n      form.elements[key].value = formDataFromLS[key]; //звертаємось до форми, до псевдомассива elements до елемента змінної key,  і записуємо в цей key значення value = звертаємось до котрий перебираємо, по ключю key і записуємо значення котре знаходилось в localStorage\n    }\n  }//перебираємо об'єкт formDataFromLS, маємо доступ до ключа в змінній key, робимо перевірку на власні чи не власні властивості\n}\nfillFormFields();\n\nconst onFormFielChange = event => { \n  const fieldName = event.target.name; //зчитуємо значення атрибута name\n  const fieldValue = event.target.value;//зчитуємо значення яке користувач ввів в поле для введення\n\n  // console.log(`${fiedName} ${fieldValue}`);\n\n  formData[fieldName] = fieldValue;//записуємо в formData ці данні\n\n  // console.log(formData);\n\n  localStorage.setItem(`feedback-form-state`, JSON.stringify(formData));  //записуємо об'єкт formData в localStorage під ключем feedback-form-state в рядковому представленні\n}\n\nconst onFeedBackFormSubmit = event => { \n  event.preventDefault();\n\n  if (!formData.email || !formData.message) {\n      alert('Fill please all fields');\n      return;\n    }// Якщо будь-яке з полів (властивостей об’єкта formData) порожнє, показуй сповіщення з текстом «Fill please all fields».\n      console.log(formData);\n    \n  event.target.reset();// очищаємо форму\n  localStorage.removeItem(`feedback-form-state`);// очищаємо значення в localStorage з ключем feedback-form-state\n}\n\nform.addEventListener('input', onFormFielChange);\nform.addEventListener('submit', onFeedBackFormSubmit);\n\n"],"names":["form","formData","fillFormFields","formDataFromLS","key","onFormFielChange","event","fieldName","fieldValue","onFeedBackFormSubmit"],"mappings":"oDAAA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EACpD,IAAIC,EAAW,CAGf,EAEA,MAAMC,EAAiB,IAAM,CAC3B,MAAMC,EAAiB,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAG7E,GAAID,IAAmB,KAIvB,CAAAD,EAAWE,EAEX,UAAWC,KAAOD,EACZA,EAAe,eAAeC,CAAG,IAEnCJ,EAAK,SAASI,CAAG,EAAE,MAAQD,EAAeC,CAAG,GAGnD,EACAF,IAEA,MAAMG,EAAmBC,GAAS,CAChC,MAAMC,EAAYD,EAAM,OAAO,KACzBE,EAAaF,EAAM,OAAO,MAIhCL,EAASM,CAAS,EAAIC,EAItB,aAAa,QAAQ,sBAAuB,KAAK,UAAUP,CAAQ,CAAC,CACtE,EAEMQ,EAAuBH,GAAS,CAGpC,GAFAA,EAAM,eAAc,EAEhB,CAACL,EAAS,OAAS,CAACA,EAAS,QAAS,CACtC,MAAM,wBAAwB,EAC9B,MACD,CACC,QAAQ,IAAIA,CAAQ,EAExBK,EAAM,OAAO,QACb,aAAa,WAAW,qBAAqB,CAC/C,EAEAN,EAAK,iBAAiB,QAASK,CAAgB,EAC/CL,EAAK,iBAAiB,SAAUS,CAAoB"}